{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/zizuRoni/projectApp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Main from './components/main.js';\nimport NavBar from './components/navigation.js';\nimport { Button } from 'react-bootstrap';\nimport fb from './assets/fb.png';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      function statusChangeCallback(response) {\n        // Called with the results from FB.getLoginStatus().\n        console.log('statusChangeCallback');\n        console.log(response); // The current login status of the person.\n\n        if (response.status === 'connected') {\n          // Logged into your webpage and Facebook.\n          testAPI();\n        } else {\n          // Not logged into your webpage or we are unable to tell.\n          document.getElementById('status').innerHTML = 'Please log ' + 'into this webpage.';\n        }\n      }\n\n      function checkLoginState() {\n        // Called when a person is finished with the Login Button.\n        window.FB.getLoginStatus(function (response) {\n          // See the onlogin handler\n          statusChangeCallback(response);\n        });\n      }\n\n      window.fbAsyncInit = function () {\n        window.FB.init({\n          appId: '{app-id}',\n          cookie: true,\n          // Enable cookies to allow the server to access the session.\n          xfbml: true,\n          // Parse social plugins on this webpage.\n          version: '{api-version}' // Use this Graph API version for this call.\n\n        });\n        window.FB.getLoginStatus(function (response) {\n          // Called after the JS SDK has been initialized.\n          statusChangeCallback(response); // Returns the login status.\n        });\n      };\n\n      (function (d, s, id) {\n        // Load the SDK asynchronously\n        var js,\n            fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) return;\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      })(document, 'script', 'facebook-jssdk');\n\n      function testAPI() {\n        // Testing Graph API after login.  See statusChangeCallback() for when this call is made.\n        console.log('Welcome!  Fetching your information.... ');\n        window.FB.api('/me', function (response) {\n          console.log('Successful login for: ' + response.name);\n          document.getElementById('status').innerHTML = 'Thanks for logging in, ' + response.name + '!';\n        });\n      }\n    };\n\n    this.handleModalShow = () => {\n      this.setState({\n        modalShow: true\n      });\n      console.log(\"modal\");\n    };\n\n    this.state = {\n      isLoggedIn: '',\n      name: '',\n      email: '',\n      picture: '',\n      status: 'Log in With Facebook'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      handleModalShow: this.handleModalShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"fb-login-button\",\n      \"data-size\": \"medium\",\n      \"data-auto-logout-link\": \"true\",\n      \"data-onlogin\": \"checkLoginState();\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/zizuRoni/projectApp/src/App.js"],"names":["React","Main","NavBar","Button","fb","App","Component","constructor","props","componentDidMount","statusChangeCallback","response","console","log","status","testAPI","document","getElementById","innerHTML","checkLoginState","window","FB","getLoginStatus","fbAsyncInit","init","appId","cookie","xfbml","version","d","s","id","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","api","name","handleModalShow","setState","modalShow","state","isLoggedIn","email","picture","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Main from './components/main.js'\nimport NavBar from './components/navigation.js'\nimport { Button } from 'react-bootstrap';\nimport fb from './assets/fb.png'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: '',\n      name: '',\n      email: '',\n      picture:'',\n      status: 'Log in With Facebook'\n    };\n  }\n\n  componentDidMount=()=>{\n\n    function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().\n      console.log('statusChangeCallback');\n      console.log(response);                   // The current login status of the person.\n      if (response.status === 'connected') {   // Logged into your webpage and Facebook.\n        testAPI();  \n      } else {                                 // Not logged into your webpage or we are unable to tell.\n        document.getElementById('status').innerHTML = 'Please log ' +\n          'into this webpage.';\n      }\n    }\n  \n  \n    function checkLoginState() {               // Called when a person is finished with the Login Button.\n      window.FB.getLoginStatus(function(response) {   // See the onlogin handler\n        statusChangeCallback(response);\n      });\n    }\n  \n  \n    window.fbAsyncInit = function() {\n      window.FB.init({\n        appId      : '{app-id}',\n        cookie     : true,                     // Enable cookies to allow the server to access the session.\n        xfbml      : true,                     // Parse social plugins on this webpage.\n        version    : '{api-version}'           // Use this Graph API version for this call.\n      });\n  \n  \n      window.FB.getLoginStatus(function(response) {   // Called after the JS SDK has been initialized.\n        statusChangeCallback(response);        // Returns the login status.\n      });\n    };\n  \n    \n    (function(d, s, id) {                      // Load the SDK asynchronously\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'facebook-jssdk'));\n  \n   \n    function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.\n      console.log('Welcome!  Fetching your information.... ');\n      window.FB.api('/me', function(response) {\n        console.log('Successful login for: ' + response.name);\n        document.getElementById('status').innerHTML =\n          'Thanks for logging in, ' + response.name + '!';\n      });\n    }\n  }\n  \n  handleModalShow=()=>{\n    this.setState({ modalShow: true})\n    console.log(\"modal\")\n  }\n\n  render(){\n   \n    return (\n    <div >\n      <NavBar \n        handleModalShow={this.handleModalShow}\n      />\n      <Main/>\n      <div class=\"fb-login-button\" data-size=\"medium\" data-auto-logout-link=\"true\" data-onlogin=\"checkLoginState();\"></div>\n       </div> \n\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}