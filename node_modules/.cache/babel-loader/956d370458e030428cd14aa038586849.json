{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/zizuRoni/projectApp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Main from './components/main.js';\nimport NavBar from './components/navigation.js';\nimport Login from './components/login.js';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModalShow = () => {\n      this.setState({\n        modalShow: true\n      });\n      console.log(\"modal\");\n    };\n\n    this.state = {\n      modalShow: false\n    };\n  }\n\n  componentDidMount() {\n    function statusChangeCallback(response) {\n      // Called with the results from FB.getLoginStatus().\n      console.log('statusChangeCallback');\n      console.log(response); // The current login status of the person.\n\n      if (response.status === 'connected') {\n        // Logged into your webpage and Facebook.\n        testAPI();\n      } else {\n        // Not logged into your webpage or we are unable to tell.\n        document.getElementById('status').innerHTML = 'Please log ' + 'into this webpage.';\n      }\n    }\n\n    function checkLoginState() {\n      // Called when a person is finished with the Login Button.\n      window.FB.getLoginStatus(function (response) {\n        // See the onlogin handler\n        statusChangeCallback(response);\n      });\n    }\n\n    window.fbAsyncInit = function () {\n      window.FB.init({\n        appId: '{app-id}',\n        cookie: true,\n        // Enable cookies to allow the server to access the session.\n        xfbml: true,\n        // Parse social plugins on this webpage.\n        version: '{api-version}' // Use this Graph API version for this call.\n\n      });\n      window.FB.getLoginStatus(function (response) {\n        // Called after the JS SDK has been initialized.\n        statusChangeCallback(response); // Returns the login status.\n      });\n    };\n\n    (function (d, s, id) {\n      // Load the SDK asynchronously\n      var js,\n          fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n\n    function testAPI() {\n      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.\n      console.log('Welcome!  Fetching your information.... ');\n      window.FB.api('/me', function (response) {\n        console.log('Successful login for: ' + response.name);\n        document.getElementById('status').innerHTML = 'Thanks for logging in, ' + response.name + '!';\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      handleModalShow: this.handleModalShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Login, {\n      show: this.state.modalShow,\n      onHide: () => this.setState({\n        modalShow: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/zizuRoni/projectApp/src/App.js"],"names":["React","Main","NavBar","Login","App","Component","constructor","props","handleModalShow","setState","modalShow","console","log","state","componentDidMount","statusChangeCallback","response","status","testAPI","document","getElementById","innerHTML","checkLoginState","window","FB","getLoginStatus","fbAsyncInit","init","appId","cookie","xfbml","version","d","s","id","js","fjs","getElementsByTagName","createElement","src","parentNode","insertBefore","api","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Main from './components/main.js'\nimport NavBar from './components/navigation.js'\nimport Login from './components/login.js'\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false\n    };\n  }\n  componentDidMount(){\n\n    function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().\n      console.log('statusChangeCallback');\n      console.log(response);                   // The current login status of the person.\n      if (response.status === 'connected') {   // Logged into your webpage and Facebook.\n        testAPI();  \n      } else {                                 // Not logged into your webpage or we are unable to tell.\n        document.getElementById('status').innerHTML = 'Please log ' +\n          'into this webpage.';\n      }\n    }\n  \n  \n    function checkLoginState() {               // Called when a person is finished with the Login Button.\n      window.FB.getLoginStatus(function(response) {   // See the onlogin handler\n        statusChangeCallback(response);\n      });\n    }\n  \n  \n    window.fbAsyncInit = function() {\n      window.FB.init({\n        appId      : '{app-id}',\n        cookie     : true,                     // Enable cookies to allow the server to access the session.\n        xfbml      : true,                     // Parse social plugins on this webpage.\n        version    : '{api-version}'           // Use this Graph API version for this call.\n      });\n  \n  \n      window.FB.getLoginStatus(function(response) {   // Called after the JS SDK has been initialized.\n        statusChangeCallback(response);        // Returns the login status.\n      });\n    };\n  \n    \n    (function(d, s, id) {                      // Load the SDK asynchronously\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'facebook-jssdk'));\n  \n   \n    function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.\n      console.log('Welcome!  Fetching your information.... ');\n      window.FB.api('/me', function(response) {\n        console.log('Successful login for: ' + response.name);\n        document.getElementById('status').innerHTML =\n          'Thanks for logging in, ' + response.name + '!';\n      });\n    }\n  }\n\n  handleModalShow=()=>{\n    this.setState({ modalShow: true})\n    console.log(\"modal\")\n  }\n\n  render(){\n   \n    return (\n    <div >\n      <NavBar \n        handleModalShow={this.handleModalShow}\n      />\n      <Main/>\n      <Login\n        show={this.state.modalShow}\n        onHide={() => this.setState({ modalShow: false})}\n      />\n    </div>\n  );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}